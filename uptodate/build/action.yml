name: "UpToDate Build"
description: "Build docker containers with uptodate"
inputs:
  repo:
    description: Repository name in the registry
    required: true
  registry:
    description: Container registry (defaults to ghcr.io)
    required: true
    default: ghcr.io
  root:
    description: Root working directory, defaults to PWD if not set.
    default: "."
    required: true
  dockerfile:
    description: Path of Dockerfile relative to root
    required: true
    default: Dockerfile
  token:
    description: GitHub token to authenticate build.
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
    - uses: actions/setup-go@v2
    - uses: imjasonh/setup-crane@01d26682810dcd47bfc8eb1efe791558123a9373

    - name: GHCR Login
      if: (github.event_name != 'pull_request')
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ inputs.token }}

    - name: Preview Result
      run: echo ${{ inputs.results }}
      shell: bash

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Pull Docker Layers
      run: docker pull ${{ inputs.registry }}/${{ inputs.repo }}/${{ inputs.result.container_name }} || exit 0
      shell: bash
  
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Prepare ${{ inputs.result.container_name }}
      id: builder
      env:
        container: ${{ inputs.result.container_name }}
        prefix: ${{ inputs.result.command_prefix }}
        filename: ${{ inputs.result.filename }}
      run: |
        basedir=$(dirname $filename)
        printf "Base directory is ${basedir}\n"
        # Get relative path to PWD and generate dashed name from it
        cd $basedir
        echo "${prefix} -t ${container} ."
        build_args="$(echo "${prefix#*--build-arg}")"
        # Add build-arg for anaconda download
        echo "dockerfile_dir=${basedir}" >> $GITHUB_ENV
        echo "build_args=${build_args}" >> $GITHUB_ENV
        echo "container=${container}" >> $GITHUB_ENV
        echo "filename=${filename}" >> $GITHUB_ENV
      shell: bash
      
    - name: Build ${{ inputs.dockerfile }}
      uses: docker/build-push-action@v2
      with:
        context: ${{ env.dockerfile_dir }}
        file: ${{ env.filename }}
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        build-args: |
          ${{ env.build_args }}
        tags: ghcr.io/rse-ops/${{ env.container }}
